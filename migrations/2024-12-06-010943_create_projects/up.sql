
CREATE TABLE projects
(
    -- Unique identifier for a project, used as a public resource.
    id           UUID PRIMARY KEY   DEFAULT gen_random_uuid(),

    -- User-provided project name.
    display_name TEXT      NOT NULL DEFAULT 'Untitled',
    -- User-provided project metadata (description, tags, etc).
    project_meta JSONB     NOT NULL DEFAULT '{}'::JSONB,

    -- Ensures the project name is not empty.
    CONSTRAINT projects_non_empty_display_name CHECK (display_name <> ''),
    -- Limits the size of the project metadata JSONB field.
    CONSTRAINT projects_workflow_meta_limit CHECK (length(project_meta::TEXT) <= 2048),

    accessed_at  TIMESTAMP NOT NULL DEFAULT current_timestamp,
    archived_at  TIMESTAMP          DEFAULT NULL,

    -- Ensures that the record was accessed only after it was updated.
    CONSTRAINT projects_accessed_after_updated CHECK (updated_at >= updated_at),
    -- Ensures that the record was archived only after it was updated.
    CONSTRAINT projects_archived_after_updated CHECK (updated_at >= updated_at),

    created_at   TIMESTAMP NOT NULL DEFAULT current_timestamp,
    updated_at   TIMESTAMP NOT NULL DEFAULT current_timestamp,
    deleted_at   TIMESTAMP          DEFAULT NULL,

    -- Ensures the record was updated only after it was created.
    CONSTRAINT projects_updated_after_created CHECK (updated_at >= created_at),
    -- Ensures the record was deleted only after it was created.
    CONSTRAINT projects_deleted_after_created CHECK (deleted_at IS NULL OR deleted_at >= created_at),
    -- Ensures the record was deleted only after it was updated.
    CONSTRAINT projects_deleted_after_updated CHECK (deleted_at IS NULL OR deleted_at >= updated_at)
);

CREATE TABLE project_members
(
    id         BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,

    -- ID of the account the membership is associated with.
    account_id UUID      NOT NULL REFERENCES accounts (id) ON DELETE CASCADE,
    -- ID of the project the membership is associated with.
    project_id UUID      NOT NULL REFERENCES projects (id) ON DELETE CASCADE,

    -- Flags for visibility and project priority.
    show_order INT       NOT NULL DEFAULT 0,
    is_pinned  BOOLEAN   NOT NULL DEFAULT FALSE,
    is_hidden  BOOLEAN   NOT NULL DEFAULT FALSE,

    -- Timestamps for tracking member's record lifecycle.
    created_at TIMESTAMP NOT NULL DEFAULT current_timestamp,
    updated_at TIMESTAMP NOT NULL DEFAULT current_timestamp,
    deleted_at TIMESTAMP          DEFAULT NULL,

    -- Ensures the record was updated only after it was created.
    CONSTRAINT project_members_updated_after_created CHECK (
        updated_at >= created_at),
    -- Ensures the record was deleted only after it was created.
    CONSTRAINT project_members_deleted_after_created CHECK (
        deleted_at IS NULL OR deleted_at >= created_at),
    -- Ensures the record was deleted only after it was updated.
    CONSTRAINT project_members_deleted_after_updated CHECK (
        deleted_at IS NULL OR deleted_at >= updated_at)
);

-- Index to speed up lookups by account, filtering to only include active members.
CREATE INDEX project_members_account_id_idx ON project_members (account_id)
    WHERE deleted_at IS NOT NULL;
-- Index to speed up lookups by project, filtering to only include active members.
CREATE INDEX project_members_project_id_idx ON project_members (project_id)
    WHERE deleted_at IS NOT NULL;

-- Trigger to automatically update the timestamp on any record update.
CREATE TRIGGER project_members_update_at_trigger
    BEFORE UPDATE
    ON project_members
    FOR EACH ROW
EXECUTE PROCEDURE refresh_update_at();

-- Define an ENUM type for invite status, with possible values:
-- 'pending' (default), 'accepted', 'declined', and 'canceled'.
CREATE TYPE INVITE_STATUS AS ENUM ('pending', 'accepted', 'declined', 'canceled');

CREATE TABLE project_invites
(
    id         BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,

    -- ID of the account being invited.
    account_id UUID          NOT NULL REFERENCES accounts (id) ON DELETE CASCADE,
    -- ID of the project the invite is associated with.
    project_id UUID          NOT NULL REFERENCES projects (id) ON DELETE CASCADE,
    -- Current status of the invite (pending, accepted, declined, or canceled).
    status     INVITE_STATUS NOT NULL DEFAULT 'pending',

    -- Timestamp recording when the invite was created.
    created_at TIMESTAMP     NOT NULL DEFAULT current_timestamp,
    -- Timestamp recording when the invite status was updated.
    updated_at TIMESTAMP     NOT NULL DEFAULT current_timestamp,

    -- Ensures that the invite was updated only after it was created.
    CONSTRAINT project_invites_updated_after_created CHECK (updated_at >= created_at)
);

-- Index on account_id to speed up lookups by account,
-- filtering to only include pending invites.
CREATE INDEX project_invites_account_id_idx ON project_invites (account_id)
    WHERE status = 'pending';
-- Index on project_id to speed up lookups by project,
-- filtering to only include pending invites.
CREATE INDEX project_invites_project_id_idx ON project_invites (project_id)
    WHERE status = 'pending';


CREATE TABLE project_webhooks
(
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
);

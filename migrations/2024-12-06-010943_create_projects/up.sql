-- Creates the `projects` table to manage project information.
CREATE TABLE projects
(
    -- Unique identifier for each project (used as a public resource).
    id           UUID PRIMARY KEY   DEFAULT gen_random_uuid(),

    -- User-provided project name.
    display_name TEXT      NOT NULL DEFAULT 'Untitled',
    -- User-provided project metadata (description, tags, etc).
    project_meta JSONB     NOT NULL DEFAULT '{}'::JSONB,

    -- Prevents the empty project name.
    CONSTRAINT projects_non_empty_display_name CHECK (display_name <> ''),
    -- Limits the size of the project metadata JSONB field.
    CONSTRAINT projects_workflow_meta_limit CHECK (length(project_meta::TEXT) <= 2048),

    -- Timestamps for tracking the row's lifecycle.
    archived_at  TIMESTAMP          DEFAULT NULL,

    -- Constraints to ensure proper lifecycle management.
    CONSTRAINT projects_archived_after_updated CHECK (archived_at >= updated_at),

    -- Timestamps for tracking the row's lifecycle.
    created_at   TIMESTAMP NOT NULL DEFAULT current_timestamp,
    updated_at   TIMESTAMP NOT NULL DEFAULT current_timestamp,
    deleted_at   TIMESTAMP          DEFAULT NULL,

    -- Constraints to ensure proper lifecycle management.
    CONSTRAINT projects_updated_after_created CHECK (updated_at >= created_at),
    CONSTRAINT projects_deleted_after_created CHECK (deleted_at IS NULL OR deleted_at >= created_at),
    CONSTRAINT projects_deleted_after_updated CHECK (deleted_at IS NULL OR deleted_at >= updated_at)
);

-- Automatically updates the `updated_at` timestamp on any row's update.
SELECT manage_updated_at('projects');

-- Create `project_members` table to manage project memberships.
CREATE TABLE project_members
(
    id         BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,

    -- ID of the account the membership is associated with.
    account_id UUID      NOT NULL REFERENCES accounts (id) ON DELETE CASCADE,
    -- ID of the project the membership is associated with.
    project_id UUID      NOT NULL REFERENCES projects (id) ON DELETE CASCADE,

    -- Flags for visibility and project priority.
    show_order INT       NOT NULL DEFAULT 0,
    is_pinned  BOOLEAN   NOT NULL DEFAULT FALSE,
    is_hidden  BOOLEAN   NOT NULL DEFAULT FALSE,

    -- Timestamps for tracking member's record lifecycle.
    created_at TIMESTAMP NOT NULL DEFAULT current_timestamp,
    updated_at TIMESTAMP NOT NULL DEFAULT current_timestamp,
    deleted_at TIMESTAMP          DEFAULT NULL,

    -- Constraints to ensure proper lifecycle management.
    CONSTRAINT project_members_updated_after_created CHECK (
        updated_at >= created_at),
    CONSTRAINT project_members_deleted_after_created CHECK (
        deleted_at IS NULL OR deleted_at >= created_at),
    CONSTRAINT project_members_deleted_after_updated CHECK (
        deleted_at IS NULL OR deleted_at >= updated_at)
);

-- Optimizes lookup for active members by account.
CREATE INDEX project_members_account_id_idx ON project_members (account_id)
    WHERE deleted_at IS NOT NULL;

-- Optimizes lookup for active members by project.
CREATE INDEX project_members_project_id_idx ON project_members (project_id)
    WHERE deleted_at IS NOT NULL;

-- Automatically updates the `updated_at` timestamp on any row's update.
SELECT manage_updated_at('project_members');

-- Define an ENUM type for invite status, with possible values:
-- 'pending' (default), 'accepted', 'declined', and 'canceled'.
CREATE TYPE INVITE_STATUS AS ENUM ('pending', 'accepted', 'declined', 'canceled');

-- Create `project_invites` table to manage project invitations.
CREATE TABLE project_invites
(
    id         BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,

    -- ID of the account being invited.
    account_id UUID          NOT NULL REFERENCES accounts (id) ON DELETE CASCADE,
    -- ID of the project the invite is associated with.
    project_id UUID          NOT NULL REFERENCES projects (id) ON DELETE CASCADE,
    -- Current status of the invite (pending, accepted, declined, or canceled).
    inv_status INVITE_STATUS NOT NULL DEFAULT 'pending',

    -- Timestamp recording when the invite was created.
    created_at TIMESTAMP     NOT NULL DEFAULT current_timestamp,
    -- Timestamp recording when the invite status was updated.
    updated_at TIMESTAMP     NOT NULL DEFAULT current_timestamp,

    -- Ensures that the invite was updated only after it was created.
    CONSTRAINT project_invites_updated_after_created CHECK (updated_at >= created_at)
);

-- Automatically updates the `updated_at` timestamp on any row's update.
SELECT manage_updated_at('project_invites');

-- Optimizes lookup for pending invites by account.
CREATE INDEX project_invites_account_id_idx ON project_invites (account_id)
    WHERE inv_status = 'pending';

-- Optimizes lookup for pending invites by project.
CREATE INDEX project_invites_project_id_idx ON project_invites (project_id)
    WHERE inv_status = 'pending';

-- Create `project_webhooks` table to manage project webhooks.
CREATE TABLE project_webhooks
(
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
);

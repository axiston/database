name: CI & CD

on:
    push:
        branches:
            - "main" # Trigger on pushes to the main branch.
        tags:
            - "v*.*.*" # Trigger on semantic version tags.
    pull_request: # Trigger validation on pull requests.
    workflow_dispatch: # Manual trigger.

jobs:
    shell:
        runs-on: ubuntu-22.04
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Run Shellcheck
                uses: ludeeus/action-shellcheck@master

    docker:
        runs-on: ubuntu-22.04
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Initialize Docker image metadata
                id: meta
                uses: docker/metadata-action@v5
                with:
                    images: |
                        axiston/postgres
                        ghcr.io/axiston/postgres
                    tags: |
                        type=raw,value=latest
                        type=semver,pattern={{version}}
                        type=semver,pattern={{major}}.{{minor}}
                        type=semver,pattern={{major}}
                        type=sha

            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Log in to Docker Hub
                if: github.event_name != 'pull_request'
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: Build and push the Docker image
                uses: docker/build-push-action@v6
                with:
                    context: .
                    push: ${{ github.event_name != 'pull_request' }}
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}

    build:
        runs-on: ubuntu-22.04
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Set up Rust toolchain
                uses: dtolnay/rust-toolchain@master
                with:
                    components: clippy,rustfmt
                    toolchain: nightly

            -   name: Set up Rust cache
                uses: Swatinem/rust-cache@v2

            -   name: Set up Postgres
                uses: ikalnytskyi/action-setup-postgres@v7
                with:
                    username: 'postgres'
                    password: 'postgres'
                    database: 'postgres'

            -   name: Wait for Postgres
                uses: ./.github/actions/wait-for-postgres
                with:
                    username: 'postgres'
                    timeout: '30'

            -   name: Run migrations on Postgres
                uses: ./.github/actions/migrate-and-generate
                with:
                    username: 'postgres'
                    password: 'postgres'
                    database: 'postgres'

            -   name: Run Cargo:fmt
                run: cargo +nightly fmt --all -- --check

            -   name: Run Cargo:clippy
                run: cargo clippy --all-features -- -D warnings

            -   name: Run Cargo:test
                run: cargo test --verbose --all-features

    publish:
        needs: build
        runs-on: ubuntu-22.04
        if: github.event_name == 'push'
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Set up Rust
                uses: dtolnay/rust-toolchain@master
                with:
                    toolchain: stable

            -   name: Run Database Tasks
                uses: ./.github/actions/migrate-and-generate

            -   name: Publish to Crates.io
                run: cargo publish --token ${CRATES_TOKEN}
                env:
                    CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
